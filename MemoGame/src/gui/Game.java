/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import core.Memo;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Nicolas Devenet <nicolas@devenet.info>
 */
public class Game extends javax.swing.JFrame {

    /**
     * Creates new form Game
     */
    public Game() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainMenuBar = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        MenuNewGame = new javax.swing.JMenuItem();
        MenuQuit = new javax.swing.JMenuItem();
        GameMenu = new javax.swing.JMenu();
        NewUndefinedGame = new javax.swing.JMenuItem();
        MenuNoviceGame = new javax.swing.JMenuItem();
        MenuNormalGame = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Memory Game");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("GameBoard"); // NOI18N

        FileMenu.setText("File");

        MenuNewGame.setText("New game");
        MenuNewGame.setActionCommand("NewGame");
        MenuNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNewGameActionPerformed(evt);
            }
        });
        FileMenu.add(MenuNewGame);

        MenuQuit.setText("Quit");
        MenuQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuQuitActionPerformed(evt);
            }
        });
        FileMenu.add(MenuQuit);

        MainMenuBar.add(FileMenu);

        GameMenu.setText("Game");

        NewUndefinedGame.setText("New");
        NewUndefinedGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewUndefinedGameActionPerformed(evt);
            }
        });
        GameMenu.add(NewUndefinedGame);

        MenuNoviceGame.setText("New Novice");
        MenuNoviceGame.setToolTipText("");
        MenuNoviceGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNoviceGameActionPerformed(evt);
            }
        });
        GameMenu.add(MenuNoviceGame);

        MenuNormalGame.setText("New Normal");
        MenuNormalGame.setToolTipText("");
        MenuNormalGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuNormalGameActionPerformed(evt);
            }
        });
        GameMenu.add(MenuNormalGame);

        MainMenuBar.add(GameMenu);

        setJMenuBar(MainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 329, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuQuitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_MenuQuitActionPerformed

    private void MenuNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNewGameActionPerformed
        // TODO add your handling code here:
        Memo.LEVEL lvl = getAskedLevel();
        if (lvl != null) {
            this.level = lvl;
            this.createGame();
        }
    }//GEN-LAST:event_MenuNewGameActionPerformed

    private void MenuNoviceGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNoviceGameActionPerformed
        // TODO add your handling code here:
        this.level = Memo.LEVEL.Novice;
        createGame();
    }//GEN-LAST:event_MenuNoviceGameActionPerformed

    private void MenuNormalGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuNormalGameActionPerformed
        // TODO add your handling code here:
        this.level = Memo.LEVEL.Normal;
        createGame();
    }//GEN-LAST:event_MenuNormalGameActionPerformed

    private void NewUndefinedGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewUndefinedGameActionPerformed
        // TODO add your handling code here:
        createGame();
    }//GEN-LAST:event_NewUndefinedGameActionPerformed

    private Memo.LEVEL getAskedLevel() {
        return (Memo.LEVEL) JOptionPane.showInputDialog(null,
                "Please select your level:",
                "Memory Game",
                JOptionPane.QUESTION_MESSAGE,
                null,
                Memo.LEVEL.values(),
                Memo.LEVEL.values()[0]);
    }

    private void createGame() {
        // check if level is correct
        if (!Memo.isLevel(this.level)) {
            JOptionPane.showMessageDialog(null,
                    "Oups, the given level is unrecognized. Please try to start a new game.",
                    "Error!",
                    JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Game.class.getName()).log(Level.SEVERE, "Level " + this.level + " not recognized!");
        } else {
            this.game = new Memo(this.level);
            JPanel containerPanel = new JPanel();
            JPanel panel = new JPanel(new GridLayout(this.game.rows(), this.game.cols(), 10, 10));
            for (Card c : this.game.cards()) {
                panel.add(c);
                Logger.getLogger(Game.class.getName()).log(Level.INFO, "Added " + c);
            }
            containerPanel.add(panel);
            this.setContentPane(containerPanel);
            this.setResizable(false);
            this.pack();

            Logger.getLogger(Game.class.getName()).log(Level.INFO, "Initialization done for new game");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenu GameMenu;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JMenuItem MenuNewGame;
    private javax.swing.JMenuItem MenuNormalGame;
    private javax.swing.JMenuItem MenuNoviceGame;
    private javax.swing.JMenuItem MenuQuit;
    private javax.swing.JMenuItem NewUndefinedGame;
    // End of variables declaration//GEN-END:variables
    private Memo game;
    private Memo.LEVEL level;
}
